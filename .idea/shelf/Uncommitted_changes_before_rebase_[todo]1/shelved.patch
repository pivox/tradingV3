Index: doc_court.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/doc_court.txt b/doc_court.txt
new file mode 100644
--- /dev/null
+++ b/doc_court.txt
@@ -0,0 +1,148 @@
+————————————————————————
+OBJECTIF
+
+Lister toutes les paires USDT “actives” (avec volume OK)
+
+Récupérer les K-lines 4h → 1m
+
+Voir le prix d’une paire
+
+Acheter / vendre
+
+Consulter le solde
+
+Suivre / annuler les ordres
+
+————————————————————————
+ENDPOINTS PUBLICS (Spot v3)
+
+A. Tous les tickers (filtrer *_USDT + seuil volume)
+GET https://api-cloud.bitmart.com/spot/quotation/v3/tickers
+
+Utilisation: récupère toutes les paires et leurs volumes (qv_24h). Filtrer côté client.
+Rate limit indicatif: 10/2s (IP). Source doc.
+Yarn
+
+B. Ticker d’une paire
+GET https://api-cloud.bitmart.com/spot/quotation/v3/ticker?symbol=BTC_USDT
+
+Utilisation: snapshot prix/volumes d’une paire.
+Rate limit indicatif: 15/2s (IP). Source doc.
+Yarn
+
+C. K-lines (historique)
+GET https://api-cloud.bitmart.com/spot/quotation/v3/klines?symbol=BTC_USDT&step=240&limit=200
+
+(step autorisés: 1,5,15,30,60,120,240,1440,10080,43200)
+Rate limit indicatif: 10/2s (IP). Source doc.
+Yarn
+
+D. K-lines récentes (fenêtre “lite”)
+GET https://api-cloud.bitmart.com/spot/quotation/v3/lite-klines?symbol=BTC_USDT&step=1&limit=200
+
+Rate limit indicatif: 15/2s (IP). Source doc.
+Yarn
+
+E. Carnet d’ordres (Depth)
+GET https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=BTC_USDT&limit=50
+
+(limit max ≈ 50 par côté). Source doc/SDK.
+Yarn
++1
+
+F. Trades récents
+GET https://api-cloud.bitmart.com/spot/quotation/v3/trades?symbol=BTC_USDT&limit=50
+
+Rate limit indicatif: 15/2s (IP). Source doc.
+Yarn
+
+G. (Optionnel) Détails des symboles (min/max, status)
+GET https://api-cloud.bitmart.com/spot/v1/symbols/details
+
+Utilisation: contrôler min_buy_amount, min_sell_amount, précisions, trade_status.
+Note: v1 “infos marché” encore référencée.
+developer-pro.bitmart.com
+
+————————————————————————
+ENDPOINTS PRIVÉS (compte & trading)
+
+H. Solde spot (KEYED)
+GET https://api-cloud.bitmart.com/spot/v1/wallet
+
+Retourne uniquement les devises avec solde > 0.
+developer-pro.bitmart.com
+
+I. Créer un ordre (SIGNED)
+POST https://api-cloud.bitmart.com/spot/v2/submit_order
+
+Champs principaux:
+
+symbol (ex: BTC_USDT), side (buy/sell), type (limit/market/limit_maker/ioc)
+
+limit: size + price requis
+
+market buy: notional requis ; market sell: size requis
+Signature (spot SIGNED) côté doc BitMart: X-BM-KEY, X-BM-TIMESTAMP, X-BM-SIGN.
+developer-pro.bitmart.com
+
+J. Consulter un ordre par orderId (SIGNED, v4)
+POST https://api-cloud.bitmart.com/spot/v4/query/order
+
+États possibles: new, partially_filled, filled, canceled, partially_canceled, failed.
+developer-pro.bitmart.com
+
+K. Consulter par clientOrderId (SIGNED, v4)
+POST https://api-cloud.bitmart.com/spot/v4/query/client-order
+
+developer-pro.bitmart.com
+
+L. Ordres ouverts / Historique / Mes trades (SIGNED, v4)
+POST https://api-cloud.bitmart.com/spot/v4/query/open-orders
+
+POST https://api-cloud.bitmart.com/spot/v4/query/history-orders
+
+POST https://api-cloud.bitmart.com/spot/v4/query/trades
+
+developer-pro.bitmart.com
+
+M. Trades d’un ordre (SIGNED, v4)
+POST https://api-cloud.bitmart.com/spot/v4/query/order-trades
+
+developer-pro.bitmart.com
+
+N. Annuler un ordre (SIGNED, v3)
+POST https://api-cloud.bitmart.com/spot/v3/cancel_order
+
+developer-pro.bitmart.com
+
+O. Annulations multiples / Tout annuler (SIGNED, v4)
+POST https://api-cloud.bitmart.com/spot/v4/cancel_orders
+
+POST https://api-cloud.bitmart.com/spot/v4/cancel_all
+
+GitHub
+
+————————————————————————
+REMARQUES PRATIQUES
+
+• Filtrage “non-dead” :
+– Utiliser /spot/quotation/v3/tickers
+– Garder uniquement *_USDT
+– Seuil minimal sur qv_24h (volume en devise de cotation) selon ton besoin.
+Yarn
+
+• Pas fixes de K-lines :
+– 1,5,15,30,60,120,240,1440,10080,43200 (soit 1m → 30d).
+Yarn
+
+• Rate limits :
+– La page Spot liste des limites indicatives par endpoint (ex. 10/2s, 15/2s).
+– Les limites effectives par appel sont aussi renvoyées dans les en-têtes:
+X-BM-RateLimit-Limit, X-BM-RateLimit-Remaining, X-BM-RateLimit-Reset.
+developer-pro.bitmart.com
++1
+
+• Évolution des routes :
+– Plusieurs endpoints v1/v2 “marché” ont été retirés/remplacés par Quotation v3.
+Cf. CHANGELOG SDK Node (suppression /spot/v1/ticker_detail, /spot/v1/symbols/kline, etc.).
+GitHub
\ No newline at end of file
Index: doc.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/doc.txt b/doc.txt
new file mode 100644
--- /dev/null
+++ b/doc.txt
@@ -0,0 +1,359 @@
+GET /spot/quotation/v3/tickers (public, v3)
+URL
+https://api-cloud.bitmart.com/spot/quotation/v3/tickers
+
+Usage
+Lister toutes les paires ayant un volume 24h > 0, puis filtrer côté client les *_USDT et appliquer un seuil sur qv_24h pour exclure les “dead pairs”.
+Inputs
+— (aucun paramètre)
+Rate-limit
+10 fois / 2s (cible : IP)
+Retour (extrait)
+data.tickers : tableau compact par paire :
+[symbol, last, v_24h, qv_24h, open_24h, high_24h, low_24h, fluctuation, bid_px, bid_sz, ask_px, ask_sz, ts]
+• symbol (String) ex. BTC_USDT
+• last (String) dernier prix
+• v_24h (String) volume 24h en devise de base
+• qv_24h (String) volume 24h en devise de cotation (USDT)
+• open_24h/high_24h/low_24h (String)
+• fluctuation (String) variation 24h (ratio, ex. 0.04909 = +4,909 %)
+• bid_px/bid_sz/ask_px/ask_sz (String) meilleur bid/ask + tailles
+• ts (String) timestamp ms
+Exemple PHP
+
+<?php $ch = curl_init(); curl_setopt_array($ch, [ CURLOPT_URL => "https://api-cloud.bitmart.com/spot/quotation/v3/tickers", CURLOPT_RETURNTRANSFER => true, ]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : documentation officielle Spot → “Get Ticker of All Pairs (V3)” + tableau Rate Limit.
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+2) GET /spot/quotation/v3/ticker (public, v3)
+URL
+https://api-cloud.bitmart.com/spot/quotation/v3/ticker?symbol=BTC_USDT
+
+Usage
+Snapshot prix/volumes d’une paire.
+Inputs
+symbol (String, requis), ex. BTC_USDT
+Rate-limit
+15 fois / 2s (IP)
+Retour (objets champs lisibles)
+symbol, last, v_24h, qv_24h, open_24h, high_24h, low_24h, fluctuation, bid_px, bid_sz, ask_px, ask_sz, ts
+Exemple PHP
+
+<?php $symbol="BTC_USDT"; $ch=curl_init(); curl_setopt_array($ch,[ CURLOPT_URL=>"https://api-cloud.bitmart.com/spot/quotation/v3/ticker?symbol={$symbol}", CURLOPT_RETURNTRANSFER=>true, ]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc officielle Spot (section v3/ticker + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+3) GET /spot/quotation/v3/klines (public, v3)
+URL
+https://api-cloud.bitmart.com/spot/quotation/v3/klines
+
+Usage
+Historique OHLCV par pas 1m,5m,15m,30m,1h,2h,4h,1d,7d,30d. Tu peux boucler 4h → 1m.
+Inputs
+symbol (String, requis) ; before (Long s, optionnel) ; after (Long s) ; step (Int minutes, valeurs permises [1,5,15,30,60,120,240,1440,10080,43200]) ; limit (Int, max 200, défaut 100)
+Rate-limit
+10 fois / 2s (IP)
+Retour (liste de bougies)
+[t, o, h, l, c, v, qv] :
+t (String, secondes), o/h/l/c (String), v (base volume), qv (quote volume)
+Exemple PHP
+
+<?php $params=["symbol"=>"BTC_USDT","step"=>"60","limit"=>"200"]; $url="https://api-cloud.bitmart.com/spot/quotation/v3/klines?".http_build_query($params); $ch=curl_init(); curl_setopt_array($ch,[CURLOPT_URL=>$url,CURLOPT_RETURNTRANSFER=>true]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc officielle Spot (History K-Line v3 + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+4) GET /spot/quotation/v3/lite-klines (public, v3)
+URL
+https://api-cloud.bitmart.com/spot/quotation/v3/lite-klines
+
+Usage
+Derniers K-lines (jusqu’à 1000), mêmes pas/params que klines ; pratique pour récupérer des fenêtres récentes en un seul appel.
+Inputs
+symbol (Yes) ; before/after (s) ; step (minutes, même énumération) ; limit (max 200, défaut 100)
+Rate-limit
+15 fois / 2s (IP)
+Exemple PHP
+
+<?php $params=["symbol"=>"BTC_USDT","step"=>"1","limit"=>"200"]; $url="https://api-cloud.bitmart.com/spot/quotation/v3/lite-klines?".http_build_query($params); $ch=curl_init(); curl_setopt_array($ch,[CURLOPT_URL=>$url,CURLOPT_RETURNTRANSFER=>true]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc officielle Spot (Latest K-Line v3 + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+5) GET /spot/quotation/v3/books (public, v3)
+URL
+https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=BTC_USDT&limit=35
+
+Inputs
+symbol (Yes) ; limit (Int, profondeur par côté, max 50, défaut 35)
+Rate-limit
+15 fois / 2s (IP)
+Retour
+ts (ms), symbol, asks[[price,amount]…], bids[[price,amount]…]
+Exemple PHP
+
+<?php $url="https://api-cloud.bitmart.com/spot/quotation/v3/books?symbol=BTC_USDT&limit=50"; $ch=curl_init(); curl_setopt_array($ch,[CURLOPT_URL=>$url,CURLOPT_RETURNTRANSFER=>true]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc officielle Spot (Depth v3 + rate + max 50).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+6) GET /spot/quotation/v3/trades (public, v3)
+URL
+https://api-cloud.bitmart.com/spot/quotation/v3/trades?symbol=BTC_USDT&limit=50
+
+Inputs
+symbol (Yes) ; limit (Int, max 50, défaut 50)
+Rate-limit
+15 fois / 2s (IP)
+Retour (liste)
+[symbol, ts(ms), price, size, side] ; side ∈ {buy, sell}
+Exemple PHP
+
+<?php $url="https://api-cloud.bitmart.com/spot/quotation/v3/trades?symbol=BTC_USDT&limit=20"; $ch=curl_init(); curl_setopt_array($ch,[CURLOPT_URL=>$url,CURLOPT_RETURNTRANSFER=>true]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc officielle Spot (Recent Trades v3 + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+7) GET /spot/v1/symbols/details (public, v1 “infos marché”)
+URL
+https://api-cloud.bitmart.com/spot/v1/symbols/details
+
+Usage
+Vérifier min/max, précisions et trade_status pour filtrer les paires actives.
+Inputs
+— (aucun)
+Rate-limit
+12 fois / 2s (IP)
+Retour (par symbole — extrait)
+symbol, symbol_id, base_currency, quote_currency, quote_increment, base_min_size, price_min_precision, price_max_precision, expiration, min_buy_amount, min_sell_amount, trade_status
+trade_status : valeurs officielles listées = trading, pre-trade
+Exemple PHP
+
+<?php $ch=curl_init(); curl_setopt_array($ch,[CURLOPT_URL=>"https://api-cloud.bitmart.com/spot/v1/symbols/details",CURLOPT_RETURNTRANSFER=>true]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc officielle Spot (Trading Pair Details v1 ; valeurs de trade_status).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+8) GET /spot/v1/wallet (privé, KEYED)
+URL
+https://api-cloud.bitmart.com/spot/v1/wallet
+
+Auth
+KEYED → seul X-BM-KEY requis (pas de signature)
+Inputs
+— (aucun)
+Rate-limit
+12 fois / 2s (X-BM-KEY)
+Retour (par devise)
+currency, name, available, available_usd_valuation, frozen, unAvailable (si présent côté funding, voir “Get Account Balance”)
+Exemple PHP (KEYED, sans signature)
+
+<?php $apiKey="VOTRE_ACCESS_KEY"; $ch=curl_init(); curl_setopt_array($ch,[ CURLOPT_URL=>"https://api-cloud.bitmart.com/spot/v1/wallet", CURLOPT_RETURNTRANSFER=>true, CURLOPT_HTTPHEADER=>["X-BM-KEY: $apiKey"], ]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc officielle Spot (Get Spot Wallet Balance (KEYED) + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+9) POST /spot/v2/submit_order (privé, SIGNED — placement d’ordre)
+URL
+https://api-cloud.bitmart.com/spot/v2/submit_order
+
+Auth & Signature (IMPORTANT)
+X-BM-SIGN = HMAC-SHA256(secretKey, timestamp + "#" + memo + "#" + bodyJSON)
+En-têtes requis : X-BM-KEY, X-BM-TIMESTAMP(ms), X-BM-SIGN
+(stpMode supporté ; orders types : limit, market, limit_maker, ioc)
+Inputs (JSON)
+symbol (req), side ∈ {buy,sell}, type ∈ {limit,market,limit_maker,ioc}
+• limit/limit_maker/ioc : size, price requis
+• market buy : notional (montant en USDT) requis
+• market sell : size requis
+Optionnels : clientOrderId (≤32), stpMode ∈ {none,cancel_maker,cancel_taker,cancel_both}
+Rate-limit
+40 fois / 2s (cible : UID)
+Retour
+data.order_id si succès
+Exemple PHP (signature correcte avec memo)
+
+<?php $accessKey="VOTRE_ACCESS_KEY"; $secretKey="VOTRE_SECRET_KEY"; $memo="VOTRE_MEMO"; // défini lors de la création de la clé API $body=[ "symbol"=>"BTC_USDT", "side"=>"buy", "type"=>"limit", "size"=>"0.001", "price"=>"25000", "stpMode"=>"none" ]; $payload=json_encode($body, JSON_UNESCAPED_SLASHES); $ts=round(microtime(true)*1000); $sign=hash_hmac('sha256', $ts."#".$memo."#".$payload, $secretKey); $ch=curl_init(); curl_setopt_array($ch,[ CURLOPT_URL=>"https://api-cloud.bitmart.com/spot/v2/submit_order", CURLOPT_RETURNTRANSFER=>true, CURLOPT_POST=>true, CURLOPT_POSTFIELDS=>$payload, CURLOPT_HTTPHEADER=>[ "Content-Type: application/json", "X-BM-KEY: $accessKey", "X-BM-TIMESTAMP: $ts", "X-BM-SIGN: $sign", ], ]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc officielle Spot (Update Plan + Signature Example + Rate Limit).
+BitMart Developer API
++1
+
+────────────────────────────────────────────────────────
+10) POST /spot/v4/query/order (privé, SIGNED — requête par orderId)
+URL
+https://api-cloud.bitmart.com/spot/v4/query/order
+
+Auth & Signature
+Même règle de signature (timestamp#memo#bodyJSON).
+v4 supporte recvWindow (ms) et la validation d’horloge (±5s par défaut).
+Inputs (JSON)
+orderId (String, requis) ; queryState (open | history, optionnel) ; recvWindow (0<val≤60000, défaut 5000)
+Rate-limit
+50 fois / 2s (cible : X-BM-KEY)
+Retour (extraits & valeurs possibles)
+side {buy,sell} ; orderMode {spot,iso_margin} ; type {limit,market,limit_maker,ioc} ; state {new, partially_filled, filled, canceled, partially_canceled, failed} ; cancelSource {user, system, stp} ; stpMode {none,cancel_maker,cancel_taker,cancel_both} ; price, priceAvg, size, filledSize, notional, filledNotional, createTime, updateTime …
+Exemple PHP
+
+<?php $accessKey="VOTRE_ACCESS_KEY"; $secretKey="VOTRE_SECRET_KEY"; $memo="VOTRE_MEMO"; $body=["orderId"=>"123456789","recvWindow"=>5000]; $payload=json_encode($body, JSON_UNESCAPED_SLASHES); $ts=round(microtime(true)*1000); $sign=hash_hmac('sha256', $ts."#".$memo."#".$payload, $secretKey); $ch=curl_init(); curl_setopt_array($ch,[ CURLOPT_URL=>"https://api-cloud.bitmart.com/spot/v4/query/order", CURLOPT_RETURNTRANSFER=>true, CURLOPT_POST=>true, CURLOPT_POSTFIELDS=>$payload, CURLOPT_HTTPHEADER=>[ "Content-Type: application/json", "X-BM-KEY: $accessKey", "X-BM-TIMESTAMP: $ts", "X-BM-SIGN: $sign", ], ]); echo curl_exec($ch); curl_close($ch); ?>
+
+Sources : doc Spot (Query v4 + recvWindow + states + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+11) POST /spot/v4/query/client-order (privé, SIGNED — par clientOrderId)
+URL
+https://api-cloud.bitmart.com/spot/v4/query/client-order
+
+Inputs
+clientOrderId (String, requis) ; recvWindow (optionnel)
+Rate-limit
+50 fois / 2s (X-BM-KEY)
+Exemple PHP
+
+<?php $accessKey="VOTRE_ACCESS_KEY"; $secretKey="VOTRE_SECRET_KEY"; $memo="VOTRE_MEMO"; $body=["clientOrderId"=>"my-id-001","recvWindow"=>5000]; $payload=json_encode($body, JSON_UNESCAPED_SLASHES); $ts=round(microtime(true)*1000); $sign=hash_hmac('sha256', $ts."#".$memo."#".$payload, $secretKey); $ch=curl_init(); curl_setopt_array($ch,[ CURLOPT_URL=>"https://api-cloud.bitmart.com/spot/v4/query/client-order", CURLOPT_RETURNTRANSFER=>true, CURLOPT_POST=>true, CURLOPT_POSTFIELDS=>$payload, CURLOPT_HTTPHEADER=>[ "Content-Type: application/json", "X-BM-KEY: $accessKey", "X-BM-TIMESTAMP: $ts", "X-BM-SIGN: $sign", ], ]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc Spot (Query client-order v4 + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+12) POST /spot/v4/query/open-orders (privé, SIGNED)
+URL
+https://api-cloud.bitmart.com/spot/v4/query/open-orders
+
+Inputs (JSON)
+symbol (optionnel), orderMode (spot|iso_margin, optionnel), startTime/endTime (ms, optionnels), limit (≤200, optionnel), recvWindow (optionnel)
+Rate-limit
+12 fois / 2s (X-BM-KEY)
+Exemple PHP
+
+<?php $ak="VOTRE_ACCESS_KEY"; $sk="VOTRE_SECRET_KEY"; $memo="VOTRE_MEMO"; $body=["symbol"=>"BTC_USDT","limit"=>100,"recvWindow"=>5000]; $payload=json_encode($body, JSON_UNESCAPED_SLASHES); $ts=round(microtime(true)*1000); $sign=hash_hmac('sha256', $ts."#".$memo."#".$payload, $sk); $ch=curl_init(); curl_setopt_array($ch,[ CURLOPT_URL=>"https://api-cloud.bitmart.com/spot/v4/query/open-orders", CURLOPT_RETURNTRANSFER=>true, CURLOPT_POST=>true, CURLOPT_POSTFIELDS=>$payload, CURLOPT_HTTPHEADER=>[ "Content-Type: application/json", "X-BM-KEY: $ak", "X-BM-TIMESTAMP: $ts", "X-BM-SIGN: $sign", ], ]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc Spot (Open Orders v4 + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+13) POST /spot/v4/query/history-orders (privé, SIGNED)
+URL
+https://api-cloud.bitmart.com/spot/v4/query/history-orders
+
+Inputs
+symbol (optionnel), orderMode (spot|iso_margin), startTime/endTime (ms), limit (≤200), recvWindow
+Rate-limit
+12 fois / 2s (X-BM-KEY)
+Exemple PHP
+
+<?php $ak="VOTRE_ACCESS_KEY"; $sk="VOTRE_SECRET_KEY"; $memo="VOTRE_MEMO"; $body=["symbol"=>"BTC_USDT","startTime"=>strtotime('-7 days')*1000,"limit"=>200]; $payload=json_encode($body, JSON_UNESCAPED_SLASHES); $ts=round(microtime(true)*1000); $sign=hash_hmac('sha256', $ts."#".$memo."#".$payload, $sk); $ch=curl_init(); curl_setopt_array($ch,[ CURLOPT_URL=>"https://api-cloud.bitmart.com/spot/v4/query/history-orders", CURLOPT_RETURNTRANSFER=>true, CURLOPT_POST=>true, CURLOPT_POSTFIELDS=>$payload, CURLOPT_HTTPHEADER=>[ "Content-Type: application/json", "X-BM-KEY: $ak", "X-BM-TIMESTAMP: $ts", "X-BM-SIGN: $sign", ], ]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc Spot (History Orders v4 + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+14) POST /spot/v4/query/trades (privé, SIGNED)
+URL
+https://api-cloud.bitmart.com/spot/v4/query/trades
+
+Inputs
+symbol (optionnel), orderMode (spot|iso_margin), startTime/endTime (ms), limit (≤200), recvWindow
+Rate-limit
+12 fois / 2s (X-BM-KEY)
+Exemple PHP
+
+<?php $ak="VOTRE_ACCESS_KEY"; $sk="VOTRE_SECRET_KEY"; $memo="VOTRE_MEMO"; $body=["symbol"=>"BTC_USDT","limit"=>100,"recvWindow"=>5000]; $payload=json_encode($body, JSON_UNESCAPED_SLASHES); $ts=round(microtime(true)*1000); $sign=hash_hmac('sha256', $ts."#".$memo."#".$payload, $sk); $ch=curl_init(); curl_setopt_array($ch,[ CURLOPT_URL=>"https://api-cloud.bitmart.com/spot/v4/query/trades", CURLOPT_RETURNTRANSFER=>true, CURLOPT_POST=>true, CURLOPT_POSTFIELDS=>$payload, CURLOPT_HTTPHEADER=>[ "Content-Type: application/json", "X-BM-KEY: $ak", "X-BM-TIMESTAMP: $ts", "X-BM-SIGN: $sign", ], ]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc Spot (Account Trade List v4 + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+15) POST /spot/v4/query/order-trades (privé, SIGNED)
+URL
+https://api-cloud.bitmart.com/spot/v4/query/order-trades
+
+Inputs
+orderId (String, requis) ; recvWindow (optionnel)
+Rate-limit
+12 fois / 2s (X-BM-KEY)
+Exemple PHP
+
+<?php $ak="VOTRE_ACCESS_KEY"; $sk="VOTRE_SECRET_KEY"; $memo="VOTRE_MEMO"; $body=["orderId"=>"123456789","recvWindow"=>5000]; $payload=json_encode($body, JSON_UNESCAPED_SLASHES); $ts=round(microtime(true)*1000); $sign=hash_hmac('sha256', $ts."#".$memo."#".$payload, $sk); $ch=curl_init(); curl_setopt_array($ch,[ CURLOPT_URL=>"https://api-cloud.bitmart.com/spot/v4/query/order-trades", CURLOPT_RETURNTRANSFER=>true, CURLOPT_POST=>true, CURLOPT_POSTFIELDS=>$payload, CURLOPT_HTTPHEADER=>[ "Content-Type: application/json", "X-BM-KEY: $ak", "X-BM-TIMESTAMP: $ts", "X-BM-SIGN: $sign", ], ]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc Spot (Order Trade List v4 + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+16) POST /spot/v3/cancel_order (privé, SIGNED — annuler 1 ordre)
+URL
+https://api-cloud.bitmart.com/spot/v3/cancel_order
+
+Inputs (JSON)
+symbol (String, requis), order_id (String, requis)
+Rate-limit
+40 fois / 2s (cible : UID)
+Retour
+data.result ∈ {true,false}
+Exemple PHP
+
+<?php $ak="VOTRE_ACCESS_KEY"; $sk="VOTRE_SECRET_KEY"; $memo="VOTRE_MEMO"; $body=["symbol"=>"BTC_USDT","order_id"=>"123456789"]; $payload=json_encode($body, JSON_UNESCAPED_SLASHES); $ts=round(microtime(true)*1000); $sign=hash_hmac('sha256', $ts."#".$memo."#".$payload, $sk); $ch=curl_init(); curl_setopt_array($ch,[ CURLOPT_URL=>"https://api-cloud.bitmart.com/spot/v3/cancel_order", CURLOPT_RETURNTRANSFER=>true, CURLOPT_POST=>true, CURLOPT_POSTFIELDS=>$payload, CURLOPT_HTTPHEADER=>[ "Content-Type: application/json", "X-BM-KEY: $ak", "X-BM-TIMESTAMP: $ts", "X-BM-SIGN: $sign", ], ]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc Spot (Cancel Order v3 + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+17) POST /spot/v4/cancel_orders (privé, SIGNED — annulations multiples)
+URL
+https://api-cloud.bitmart.com/spot/v4/cancel_orders
+
+Inputs (JSON)
+symbol (requis), orderIds (array max 10) OU clientOrderIds (array max 10)
+Rate-limit
+40 fois / 2s (UID)
+Exemple PHP
+
+<?php $ak="VOTRE_ACCESS_KEY"; $sk="VOTRE_SECRET_KEY"; $memo="VOTRE_MEMO"; $body=["symbol"=>"BTC_USDT","orderIds"=>["111","222","333"]]; $payload=json_encode($body, JSON_UNESCAPED_SLASHES); $ts=round(microtime(true)*1000); $sign=hash_hmac('sha256', $ts."#".$memo."#".$payload, $sk); $ch=curl_init(); curl_setopt_array($ch,[ CURLOPT_URL=>"https://api-cloud.bitmart.com/spot/v4/cancel_orders", CURLOPT_RETURNTRANSFER=>true, CURLOPT_POST=>true, CURLOPT_POSTFIELDS=>$payload, CURLOPT_HTTPHEADER=>[ "Content-Type: application/json", "X-BM-KEY: $ak", "X-BM-TIMESTAMP: $ts", "X-BM-SIGN: $sign", ], ]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc Spot (Cancel Batch v4 + règles “max 10” + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+18) POST /spot/v4/cancel_all (privé, SIGNED — tout annuler par symbole)
+URL
+https://api-cloud.bitmart.com/spot/v4/cancel_all
+
+Inputs (JSON)
+symbol (requis)
+Rate-limit
+1 fois / 3s (UID)
+Exemple PHP
+
+<?php $ak="VOTRE_ACCESS_KEY"; $sk="VOTRE_SECRET_KEY"; $memo="VOTRE_MEMO"; $body=["symbol"=>"BTC_USDT"]; $payload=json_encode($body, JSON_UNESCAPED_SLASHES); $ts=round(microtime(true)*1000); $sign=hash_hmac('sha256', $ts."#".$memo."#".$payload, $sk); $ch=curl_init(); curl_setopt_array($ch,[ CURLOPT_URL=>"https://api-cloud.bitmart.com/spot/v4/cancel_all", CURLOPT_RETURNTRANSFER=>true, CURLOPT_POST=>true, CURLOPT_POSTFIELDS=>$payload, CURLOPT_HTTPHEADER=>[ "Content-Type: application/json", "X-BM-KEY: $ak", "X-BM-TIMESTAMP: $ts", "X-BM-SIGN: $sign", ], ]); echo curl_exec($ch); curl_close($ch); ?>
+
+Source : doc Spot (Cancel All v4 + rate).
+BitMart Developer API
+
+────────────────────────────────────────────────────────
+Notes importantes (auth, temps, dépréciations)
+• Auth types : NONE (public), KEYED (X-BM-KEY), SIGNED (X-BM-KEY + X-BM-TIMESTAMP + X-BM-SIGN). La signature se fait avec le memo : SIGN = HMAC-SHA256(secretKey, timestamp + “#” + memo + “#” + bodyJSON). (Pour une requête POST sans body, utilise "" comme body).
+BitMart Developer API
+
+• v1/v2 marché (ticker/ticker_detail/steps…) ont été remplacés par les routes Quotation v3 ; la page “Change Log / Remove Endpoint” liste les remplacements.
+BitMart Developer API
+
+• v4 introduit recvWindow pour contrôler la tolérance de dérive d’horloge (par défaut ±5000 ms).
+BitMart Developer API
+
+• Les rate-limits exactes par endpoint sont dans la section “Rate Limit” (public = IP, privé = KEY/UID) et dans les en-têtes des réponses :
+X-BM-RateLimit-Limit, X-BM-RateLimit-Remaining, X-BM-RateLimit-Reset.
+BitMart Developer API
+
+Sources officielles (fiables)
+• BitMart — Spot API Reference (endpoints, params/retours, signature, rate-limits, remplacements).
\ No newline at end of file
