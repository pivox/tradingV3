<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Graphique Chandeliers - Trading</title>

    <!-- Chart.js v4.2.1 -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.2.1/dist/chart.umd.min.js"></script>

    <!-- Luxon -->
    <script src="https://cdn.jsdelivr.net/npm/luxon@3.4.4/build/global/luxon.min.js"></script>

    <!-- Adapter Luxon -->
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-luxon@1.3.1/dist/chartjs-adapter-luxon.umd.min.js"></script>

    <!-- Plugin chandeliers v3.1.0 -->
    <script src="https://cdn.jsdelivr.net/npm/chartjs-chart-financial@3.1.0/dist/chartjs-chart-financial.min.js"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background-color: #f5f5f5;
        }
        .controls {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }
        .control-group {
            margin-bottom: 15px;
        }
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        select, input {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 14px;
        }
        .popular-symbols {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
            margin-top: 10px;
        }
        .symbol-btn {
            padding: 5px 10px;
            border: 1px solid #ddd;
            background: #f9f9f9;
            border-radius: 4px;
            cursor: pointer;
            font-size: 12px;
        }
        .symbol-btn:hover {
            background: #e9e9e9;
        }
        .symbol-btn.active {
            background: #007bff;
            color: white;
            border-color: #007bff;
        }
        .chart-container {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .loading {
            text-align: center;
            padding: 40px;
            color: #666;
        }
        .error {
            background: #f8d7da;
            color: #721c24;
            padding: 10px;
            border-radius: 4px;
            margin: 10px 0;
        }
    </style>
</head>
<body>
<h1>Graphiques de Trading</h1>

<div class="controls">
    <div class="control-group">
        <label for="symbol">Contrat :</label>
        <input type="text" id="symbol" value="BTCUSDT" placeholder="Ex: BTCUSDT">
    </div>

    <div class="control-group">
        <label for="interval">Timeframe :</label>
        <select id="interval">
            <option value="1m">1 minute</option>
            <option value="5m">5 minutes</option>
            <option value="15m">15 minutes</option>
            <option value="1h">1 heure</option>
            <option value="4h" selected>4 heures</option>
        </select>
    </div>

    <div class="control-group">
        <label>Contrats populaires :</label>
        <div class="popular-symbols">
            <span class="symbol-btn active" data-symbol="BTCUSDT">BTCUSDT</span>
            <span class="symbol-btn" data-symbol="ETHUSDT">ETHUSDT</span>
            <span class="symbol-btn" data-symbol="BNBUSDT">BNBUSDT</span>
            <span class="symbol-btn" data-symbol="ADAUSDT">ADAUSDT</span>
            <span class="symbol-btn" data-symbol="SOLUSDT">SOLUSDT</span>
            <span class="symbol-btn" data-symbol="XRPUSDT">XRPUSDT</span>
            <span class="symbol-btn" data-symbol="DOTUSDT">DOTUSDT</span>
            <span class="symbol-btn" data-symbol="DOGEUSDT">DOGEUSDT</span>
        </div>
    </div>
</div>

<div class="chart-container">
    <div id="loading" class="loading" style="display: none;">
        Chargement du graphique...
    </div>
    <div id="error" class="error" style="display: none;"></div>
    <canvas id="candlestickChart" width="900" height="500"></canvas>
</div>

<script>
    const ctx = document.getElementById('candlestickChart').getContext('2d');
    const loadingEl = document.getElementById('loading');
    const errorEl = document.getElementById('error');
    let chart;

    function showLoading() {
        loadingEl.style.display = 'block';
        errorEl.style.display = 'none';
    }

    function hideLoading() {
        loadingEl.style.display = 'none';
    }

    function showError(message) {
        errorEl.textContent = message;
        errorEl.style.display = 'block';
        loadingEl.style.display = 'none';
    }

    async function loadChart(symbol = 'BTCUSDT', interval = '4h') {
        showLoading();
        
        try {
            const url = `/api/bitmart/klines/by-timeframe?symbol=${symbol}&intervals=${interval}&limit=100`;
            const res = await fetch(url);
            
            if (!res.ok) {
                throw new Error(`Erreur ${res.status}: ${res.statusText}`);
            }
            
            const json = await res.json();
            const klines = json.intervals?.[interval] || [];

            if (klines.length === 0) {
                throw new Error('Aucune donnée disponible pour ce symbole et timeframe');
            }

            const data = klines.map(k => ({
                x: new Date(k.timestamp),
                o: parseFloat(k.open),
                h: parseFloat(k.high),
                l: parseFloat(k.low),
                c: parseFloat(k.close)
            }));

            if (chart) chart.destroy();

            chart = new Chart(ctx, {
                type: 'candlestick',
                data: {
                    datasets: [{
                        label: `${symbol} (${interval})`,
                        data: data,
                        borderColor: 'black',
                        color: {
                            up: '#00b746',
                            down: '#ef403c',
                            unchanged: 'gray'
                        }
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            type: 'time',
                            time: {
                                unit: interval.includes('m') ? 'minute' : 'hour',
                                tooltipFormat: 'DD/MM HH:mm'
                            }
                        },
                        y: {
                            title: {
                                display: true,
                                text: 'Prix (USDT)'
                            }
                        }
                    },
                    plugins: {
                        title: {
                            display: true,
                            text: `Graphique ${symbol} - ${interval}`
                        }
                    }
                }
            });

            hideLoading();
        } catch (error) {
            console.error('Erreur lors du chargement du graphique:', error);
            showError(`Erreur: ${error.message}`);
        }
    }

    // Gestionnaires d'événements
    document.getElementById('interval').addEventListener('change', (e) => {
        const symbol = document.getElementById('symbol').value.toUpperCase();
        loadChart(symbol, e.target.value);
    });

    document.getElementById('symbol').addEventListener('change', (e) => {
        const interval = document.getElementById('interval').value;
        loadChart(e.target.value.toUpperCase(), interval);
    });

    // Gestion des boutons de symboles populaires
    document.querySelectorAll('.symbol-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            // Retirer la classe active de tous les boutons
            document.querySelectorAll('.symbol-btn').forEach(b => b.classList.remove('active'));
            // Ajouter la classe active au bouton cliqué
            btn.classList.add('active');
            
            // Mettre à jour le champ de saisie et charger le graphique
            const symbol = btn.dataset.symbol;
            document.getElementById('symbol').value = symbol;
            const interval = document.getElementById('interval').value;
            loadChart(symbol, interval);
        });
    });

    // Chargement initial
    loadChart('BTCUSDT', '4h');
</script>
</body>
</html>
