services:

  ##################################
  # FRONTEND (isolé)
  ##################################
  frontend-dev:
    image: node:16-alpine
    container_name: frontend_dev
    working_dir: /app
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"  # Accès via localhost:3000
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:8080  # Appelle NGINX exposé
    command: sh -c "npm install --legacy-peer-deps && npm start"
    networks:
      - frontend-net

  ##################################
  # BACKEND SYMFONY (isolé)
  ##################################
  php:
    build: ./symfony-app
    container_name: symfony_php
    volumes:
      - ./symfony-app:/var/www/html
    environment:
      DATABASE_URL: "mysql://symfony:symfony@db:3306/symfony_db"
    depends_on:
      - db
      - python
    networks:
      - symfony-net
      - shared-net

  nginx:
    image: nginx:latest
    container_name: symfony_nginx
    ports:
      - "8080:80"  # Expose l'API publique
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./symfony-app:/var/www/html
    depends_on:
      - php
    networks:
      - symfony-net

  db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: symfony_db
      MYSQL_USER: symfony
      MYSQL_PASSWORD: symfony
    volumes:
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - symfony-net

  python:
    build: ./python-api
    container_name: indicator_api
    volumes:
      - ./python-api:/app
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: symfony_db
      DB_USER: symfony
      DB_PASSWORD: symfony
    ports:
      - "8888:8000"
    depends_on:
      - db
    networks:
      - symfony-net

  ##################################
  # TEMPORAL STACK (isolé)
  ##################################
  postgresql:
    image: postgres:13
    container_name: temporal_postgresql
    environment:
      POSTGRES_USER: temporal
      POSTGRES_PASSWORD: temporal
    ports:
      - "5434:5432"
    networks:
      - temporal-net

  temporal:
    image: temporalio/auto-setup:1.22
    container_name: temporal_server
    depends_on:
      - postgresql
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=/etc/temporal/config/dynamicconfig/development.yaml
    ports:
      - "7233:7233"
    volumes:
      - ./temporal/config/dynamicconfig:/etc/temporal/config/dynamicconfig
      - ./temporal:/app
    networks:
      - temporal-net
      - shared-net

  temporal-ui:
    image: temporalio/ui:2.39.0
    container_name: temporal_ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
    ports:
      - "8233:8080"
    networks:
      - temporal-net

  temporal-worker:
    build:
      context: ./temporal/workers
      dockerfile: Dockerfile
    container_name: temporal_worker
    command: [ "python", "worker_main.py" ]
    volumes:
      - ./temporal:/app
    working_dir: /app/workers
    depends_on:
      - temporal
    environment:
      - TEMPORAL_HOST=temporal:7233
    networks:
      - temporal-net
      - shared-net

  temporal-scripts:
    build:
      context: ./temporal/scripts
      dockerfile: Dockerfile
    container_name: temporal_scripts
    command: [ "tail", "-f", "/dev/null" ]
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - temporal
    networks:
      - temporal-net
      - shared-net

  ##################################
  # REDIS SHARED
  ##################################
  redis:
    image: redis:7
    container_name: redis_server
    ports:
      - "6379:6379"
    networks:
      - shared-net

##################################
# VOLUMES & NETWORKS
##################################

volumes:
  mysql-data:

networks:
  frontend-net:
  symfony-net:
  temporal-net:
  shared-net:
