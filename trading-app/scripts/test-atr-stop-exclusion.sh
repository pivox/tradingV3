#!/bin/bash

# Script de test pour v√©rifier l'exclusion de la condition atr_stop_valid
# Usage: ./scripts/test-atr-stop-exclusion.sh

set -e

# Configuration
API_BASE="http://localhost:8082"
ENDPOINT="/indicators/revalidate"

echo "=========================================="
echo "Test d'exclusion de la condition atr_stop_valid"
echo "=========================================="
echo "URL: $API_BASE$ENDPOINT"
echo ""

# Test 1: V√©rifier que atr_stop_valid est marqu√©e comme non applicable
echo "Test 1: V√©rification de la condition atr_stop_valid"
echo "----------------------------------------"
RESPONSE=$(curl -s -X POST "$API_BASE$ENDPOINT" \
    -H "Content-Type: application/json" \
    -d '{"date": "2024-10-01", "contracts": "BTCUSDT", "timeframe": "1h"}')

ATR_STOP_RESULT=$(echo "$RESPONSE" | jq -r '.data.contracts_results.BTCUSDT.conditions_results.atr_stop_valid')

echo "R√©sultat de atr_stop_valid:"
echo "$ATR_STOP_RESULT" | jq '.'

# V√©rifier les propri√©t√©s
NOT_APPLICABLE=$(echo "$ATR_STOP_RESULT" | jq -r '.meta.not_applicable // false')
REASON=$(echo "$ATR_STOP_RESULT" | jq -r '.meta.reason // "N/A"')
CONTEXT=$(echo "$ATR_STOP_RESULT" | jq -r '.meta.context // "N/A"')

if [ "$NOT_APPLICABLE" = "true" ]; then
    echo "‚úÖ Condition correctement marqu√©e comme non applicable"
    echo "üìã Raison: $REASON"
    echo "üìã Contexte: $CONTEXT"
else
    echo "‚ùå Condition non marqu√©e comme non applicable"
fi
echo ""

# Test 2: V√©rifier que les autres conditions ATR fonctionnent
echo "Test 2: V√©rification des autres conditions ATR"
echo "----------------------------------------"
ATR_VOLATILITY=$(echo "$RESPONSE" | jq -r '.data.contracts_results.BTCUSDT.conditions_results.atr_volatility_ok')

echo "R√©sultat de atr_volatility_ok:"
echo "$ATR_VOLATILITY" | jq '.'

VOLATILITY_PASSED=$(echo "$ATR_VOLATILITY" | jq -r '.passed // false')
VOLATILITY_VALUE=$(echo "$ATR_VOLATILITY" | jq -r '.value // "N/A"')

if [ "$VOLATILITY_PASSED" = "true" ]; then
    echo "‚úÖ Condition atr_volatility_ok fonctionne correctement"
    echo "üìä Valeur: $VOLATILITY_VALUE"
else
    echo "‚ö†Ô∏è  Condition atr_volatility_ok √©choue (normal si volatilit√© trop √©lev√©e)"
fi
echo ""

# Test 3: V√©rifier le contexte ATR disponible
echo "Test 3: V√©rification du contexte ATR"
echo "----------------------------------------"
CONTEXT=$(echo "$RESPONSE" | jq -r '.data.contracts_results.BTCUSDT.context')

ATR_VALUE=$(echo "$CONTEXT" | jq -r '.atr // "N/A"')
ATR_K=$(echo "$CONTEXT" | jq -r '.atr_k // "N/A"')
K_VALUE=$(echo "$CONTEXT" | jq -r '.k // "N/A"')

echo "Donn√©es ATR disponibles:"
echo "  - ATR: $ATR_VALUE"
echo "  - ATR_K: $ATR_K"
echo "  - K: $K_VALUE"

if [ "$ATR_VALUE" != "N/A" ] && [ "$ATR_K" != "N/A" ]; then
    echo "‚úÖ Donn√©es ATR disponibles dans le contexte"
else
    echo "‚ùå Donn√©es ATR manquantes dans le contexte"
fi
echo ""

# Test 4: V√©rifier l'affichage dans l'interface web
echo "Test 4: V√©rification de l'affichage dans l'interface web"
echo "----------------------------------------"
WEB_PAGE=$(curl -s "$API_BASE/indicators/test")

if echo "$WEB_PAGE" | grep -q "Non applicable"; then
    echo "‚úÖ Badge 'Non applicable' pr√©sent dans l'interface web"
else
    echo "‚ùå Badge 'Non applicable' manquant dans l'interface web"
fi

if echo "$WEB_PAGE" | grep -q "Donn√©es manquantes"; then
    echo "‚úÖ Badge 'Donn√©es manquantes' pr√©sent dans l'interface web"
else
    echo "‚ùå Badge 'Donn√©es manquantes' manquant dans l'interface web"
fi
echo ""

# Test 5: Test avec diff√©rents contrats
echo "Test 5: Test avec diff√©rents contrats"
echo "----------------------------------------"
CONTRACTS=("ETHUSDT" "ADAUSDT" "SOLUSDT")

for contract in "${CONTRACTS[@]}"; do
    echo "Test avec $contract:"
    
    CONTRACT_RESPONSE=$(curl -s -X POST "$API_BASE$ENDPOINT" \
        -H "Content-Type: application/json" \
        -d "{\"date\": \"2024-10-01\", \"contracts\": \"$contract\", \"timeframe\": \"1h\"}")
    
    CONTRACT_ATR_STOP=$(echo "$CONTRACT_RESPONSE" | jq -r ".data.contracts_results.$contract.conditions_results.atr_stop_valid")
    CONTRACT_NOT_APPLICABLE=$(echo "$CONTRACT_ATR_STOP" | jq -r '.meta.not_applicable // false')
    
    if [ "$CONTRACT_NOT_APPLICABLE" = "true" ]; then
        echo "  ‚úÖ $contract: Condition correctement exclue"
    else
        echo "  ‚ùå $contract: Condition non exclue"
    fi
done
echo ""

# Test 6: V√©rifier le nombre total de conditions
echo "Test 6: V√©rification du nombre total de conditions"
echo "----------------------------------------"
ALL_CONDITIONS=$(echo "$RESPONSE" | jq -r '.data.contracts_results.BTCUSDT.conditions_results | keys | length')
NOT_APPLICABLE_COUNT=$(echo "$RESPONSE" | jq -r '.data.contracts_results.BTCUSDT.conditions_results | to_entries | map(select(.value.meta.not_applicable == true)) | length')
MISSING_DATA_COUNT=$(echo "$RESPONSE" | jq -r '.data.contracts_results.BTCUSDT.conditions_results | to_entries | map(select(.value.meta.missing_data == true)) | length')

echo "üìä Statistiques des conditions:"
echo "  - Total des conditions: $ALL_CONDITIONS"
echo "  - Conditions non applicables: $NOT_APPLICABLE_COUNT"
echo "  - Conditions avec donn√©es manquantes: $MISSING_DATA_COUNT"

if [ "$NOT_APPLICABLE_COUNT" -gt 0 ]; then
    echo "‚úÖ Au moins une condition est marqu√©e comme non applicable"
else
    echo "‚ö†Ô∏è  Aucune condition marqu√©e comme non applicable"
fi
echo ""

echo "=========================================="
echo "Tests termin√©s"
echo "=========================================="
echo ""
echo "üéØ R√©sum√© des fonctionnalit√©s test√©es:"
echo "  ‚úÖ Exclusion de atr_stop_valid du contexte de revalidation"
echo "  ‚úÖ Fonctionnement des autres conditions ATR"
echo "  ‚úÖ Disponibilit√© des donn√©es ATR dans le contexte"
echo "  ‚úÖ Affichage correct dans l'interface web"
echo "  ‚úÖ Exclusion coh√©rente sur tous les contrats"
echo "  ‚úÖ Statistiques des conditions"
echo ""
echo "üí° Explication:"
echo "  - atr_stop_valid n√©cessite un prix d'entr√©e et un stop loss"
echo "  - Ces donn√©es n'existent pas dans un contexte de revalidation historique"
echo "  - La condition est maintenant marqu√©e comme 'Non applicable'"
echo "  - L'interface affiche un badge gris au lieu d'un badge d'erreur"
echo ""
echo "üåê Interface web: $API_BASE/indicators/test"

